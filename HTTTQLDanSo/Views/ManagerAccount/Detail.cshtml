@model HTTTQLDanSo.Models.EditAccountViewModel
@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    .custom-select {
        width: 100%;
        padding: 8px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
        margin-bottom: 10px;
    }
</style>

<div class="container register-container">
    @if (ViewData["SuccessMsg"] != null)
    {
        <div class="col-sm-3 offset-sm-5 alert alert-success text-md-center" role="alert">
            <strong>@ViewData["SuccessMsg"].ToString() </strong>
        </div>
    }
    else if (ViewData["ErrorMsg"] != null)
    {
        <div class="col-sm-3 offset-sm-5 alert alert-danger text-md-center" role="alert">
            <strong>@ViewData["ErrorMsg"].ToString() </strong>
        </div>
    }
    @using (Html.BeginForm("Update", "ManagerAccount", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.HiddenFor(m => m.Id);
        <div class="container">
            <h2>Cập nhật tài khoản</h2>

            <div class="form-group">
                <div class="col-sm-2 control-label">
                    Họ
                </div>
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2 control-label">
                    Tên
                </div>
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2 control-label">
                    Số điện thoại
                </div>
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2 control-label">
                    Quyền
                </div>
                <div class="col-sm-10">
                    @foreach (var item in Model.Roles)
                    {
                        <div class="checkbox">
                            <label>
                                <input type="checkbox"
                                       name="SelectedRoleNames"
                                       value="@item.RoleName"
                                       @(Model.SelectedRoleNames != null && Model.SelectedRoleNames.Contains(item.RoleName) ? "checked" : "") /> @item.RoleName
                                </label>
                            </div>
                        }
                    @Html.ValidationMessageFor(m => m.SelectedRoleNames, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2 control-label">
                    Tỉnh thành
                </div>
                <div class="col-sm-10">
                    @Html.DropDownListFor(m => m.ProvinId, Model.Provinces, "Chọn tỉnh thành", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-2 control-label">
                    Quận huyện
                </div>
                <div class="col-sm-10">
                    @Html.DropDownListFor(m => m.DistrictId, Model.Districts, "Chọn quận huyện", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2 control-label">
                    Phường xã
                </div>
                <div class="col-sm-10">
                    @Html.DropDownListFor(m => m.RegionID, Model.Regions, "Chọn xã phường", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2 control-label">
                    Địa chỉ
                </div>
                <div class="col-sm-10">

                    @*@Html.DropDownListFor(m => m.WorkerIds, new MultiSelectList(Model.Workers, "Value", "Text"), new { @multiple = "multiple" })*@
                    @Html.DropDownListFor(m => m.WorkerIds, new MultiSelectList(Model.Workers, "Value", "Text"), new { @class = "js-example-basic-multiple js-states form-control" }) <!-- Add a custom class -->

                    @Html.ValidationMessageFor(m => m.WorkerIds, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-10">
                    <button type="submit" class="btn btn-primary">Cập nhật</button>
                </div>
            </div>
        </div>
    }
</div>

<script>

    $('#Provinces').removeData("val-required");
    $('#Provinces').removeData("unobtrusiveValidation");

    $('#Districts').removeData("val-required");
    $('#Districts').removeData("unobtrusiveValidation");

    $(document).ready(function () { 
        var workerIds = @Html.Raw(Json.Encode(Model.WorkerIds)); 

        $('#WorkerIds').select2({
            multiple: true
        });

        $('#WorkerIds').val(workerIds); // Set the selected values
        $('#WorkerIds').trigger('change'); // Trigger the change event to make sure select2 is aware of the changes
        $("#ProvinId").change(function () {
            var selectedProvinceId = $(this).val();
            $.ajax({
                url: '/ManagerAccount/GetRegions', // Replace with the actual endpoint to retrieve regions based on selected province
                type: 'GET',
                datatype: 'json',
                data: { provinceId: selectedProvinceId },
                success: function (data) {
                    var regionsDropdown = $('#DistrictId');
                    regionsDropdown.empty();
                    $.each(data, function (i, item) {
                        regionsDropdown.append($('<option>', {
                            value: item.Value,
                            text: item.Text
                        }));
                    });
                }
            });
        });

        $("#DistrictId").change(function () {
            var selectedProvinceId = $(this).val();
            $.ajax({
                url: '/ManagerAccount/GetRegions', // Replace with the actual endpoint to retrieve regions based on selected province
                type: 'GET',
                datatype: 'json',
                data: { provinceId: selectedProvinceId },
                success: function (data) {
                    var regionsDropdown = $('#RegionID');
                    regionsDropdown.empty();
                    $.each(data, function (i, item) {
                        regionsDropdown.append($('<option>', {
                            value: item.Value,
                            text: item.Text
                        }));
                    });
                }
            });
        });

        $("#RegionID").change(function () {
            var selectedRegionId = $(this).val();
            $.ajax({
                url: '/ManagerAccount/GetAddresss', // Replace with the actual endpoint to retrieve regions based on selected province
                type: 'GET',
                datatype: 'json',
                data: { regionId: selectedRegionId },
                success: function (data) {
                    var regionsDropdown = $('#WorkerId');
                    regionsDropdown.empty();
                    $.each(data, function (i, item) {
                        regionsDropdown.append($('<option>', {
                            value: item.Value,
                            text: item.Text
                        }));
                    });
                }
            });
        });
    });
</script>